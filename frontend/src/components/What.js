import React, { useRef, useEffect } from "react";
import { motion, useInView } from "framer-motion";
import what from "../icons/what.jpg";

function What() {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true });

  const imgRef = useRef(null);
  const wrapperRef = useRef(null);

  useEffect(() => {
    const wrapper = wrapperRef.current;
    const img = imgRef.current;

    const handleMouseMove = (e) => {
      const rect = wrapper.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const centerX = rect.width / 2;
      const centerY = rect.height / 2;
      const rotateX = ((y - centerY) / centerY) * -10;
      const rotateY = ((x - centerX) / centerX) * 10;

      img.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(1.05)`;
    };

    const handleMouseLeave = () => {
      img.style.transform = `rotateX(0deg) rotateY(0deg) scale(1)`;
    };

    wrapper.addEventListener("mousemove", handleMouseMove);
    wrapper.addEventListener("mouseleave", handleMouseLeave);

    return () => {
      wrapper.removeEventListener("mousemove", handleMouseMove);
      wrapper.removeEventListener("mouseleave", handleMouseLeave);
    };
  }, []);

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 50 }}
      animate={isInView ? { opacity: 1, y: 0 } : {}}
      transition={{ duration: 0.8 }}
      className="what"
    >
      <div className="what_container">
        <motion.div
          className="what_block"
          initial={{ opacity: 0, x: -50 }}
          animate={isInView ? { opacity: 1, x: 0 } : {}}
          transition={{ duration: 0.8, delay: 0.2 }}
        >
          <motion.div
            className="what_content"
            initial={{ opacity: 0, x: 50 }}
            animate={isInView ? { opacity: 1, x: 0 } : {}}
            transition={{ duration: 0.8, delay: 0.4 }}
          >
            <h1>–ß—Ç–æ —Ç–∞–∫–æ–µ —á–µ–ª–ª–µ–Ω–¥–∂?</h1>
            <p>
              –°–ª–æ–≤–æ —á–µ–ª–ª–µ–Ω–¥–∂ (–æ—Ç –∞–Ω–≥–ª. challenge) ‚Äî —ç—Ç–æ –≤—ã–∑–æ–≤, –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –∏–ª–∏ –∑–∞–¥–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, –æ–±—ã—á–Ω–æ –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Å—Ä–æ–∫ –∏–ª–∏ –ø–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º.
            </p>
            <p>xdvcsd</p>
            <ul className="custom-list">
              <motion.li
                initial={{ opacity: 0, x: -50 }}
                animate={isInView ? { opacity: 1, x: 0 } : {}}
                transition={{ duration: 0.8, delay: 0.6 }}
              >
                <span className="icon">‚úîÔ∏è</span>
                –£—á–∞—Å—Ç–≤—É–π –≤ –∫–æ–º–∞–Ω–¥–Ω—ã—Ö —á–µ–ª–ª–µ–Ω–¥–∂–∞—Ö
              </motion.li>
              <motion.li
                initial={{ opacity: 0, x: -50 }}
                animate={isInView ? { opacity: 1, x: 0 } : {}}
                transition={{ duration: 0.8, delay: 0.8 }}
              >
                <span className="icon">üöÄ</span>
                –ü—Ä–æ–∫–∞—á–∏–≤–∞–π –Ω–∞–≤—ã–∫–∏ —á–µ—Ä–µ–∑ –∏–≥—Ä—É
              </motion.li>
              <motion.li
                initial={{ opacity: 0, x: -50 }}
                animate={isInView ? { opacity: 1, x: 0 } : {}}
                transition={{ duration: 0.8, delay: 1 }}
              >
                <span className="icon">üèÜ</span>
                –ü–æ–ª—É—á–∞–π –Ω–∞–≥—Ä–∞–¥—ã –∏ —Ä–µ–π—Ç–∏–Ω–≥
              </motion.li>
            </ul>
          </motion.div>

          {/* –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è 3D-—ç—Ñ—Ñ–µ–∫—Ç–∞ */}
          <div className="img_wrapper" ref={wrapperRef}>
            <motion.img
              ref={imgRef}
              src={what}
              alt="—Ñ–æ–Ω"
              className="what_img"
              initial={{ opacity: 0, scale: 0.8 }}
              animate={isInView ? { opacity: 1, scale: 1 } : {}}
              transition={{ duration: 0.8, delay: 0.6 }}
            />
          </div>
        </motion.div>
      </div>
    </motion.div>
  );
}

export default What;
